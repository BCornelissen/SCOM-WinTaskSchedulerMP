<ManagementPackFragment SchemaVersion="2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <TypeDefinitions>
    <MonitorTypes>
      <!-- event driven; using a cosolidator to assure state changes do not occur more often than every 5 minutes, even if the tasks are started more often -->
      <!--     will reset only if a clean task run has been observed (without event 322 during its execution).                                              -->
      <UnitMonitorType ID="Custom.TaskScheduler2.Task.ExecutionSkipped.MonitorType" Accessibility="Internal">
        <MonitorTypeStates>
          <!--
          <MonitorTypeState ID="TaskStarted" NoDetection="false" />
          -->
          <MonitorTypeState ID="NoExecutionSkipped" NoDetection="false" />
          <MonitorTypeState ID="ExecutionSkipped" NoDetection="false" />
        </MonitorTypeStates>
        <Configuration>
          <xsd:element name="ComputerName" type="xsd:string" />
          <xsd:element name="TaskPath" type="xsd:string" />
          <xsd:element name="WindowsTasks" type="xsd:boolean"/>
          <xsd:element name="Debug" type="xsd:boolean" />
          <xsd:element name="TimeoutSeconds" type="xsd:integer"  />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="Debug" Selector="$Config/Debug$" ParameterType="bool" />
          <OverrideableParameter ID="TimeoutSeconds" Selector="$Config/TimeoutSeconds$" ParameterType="int" />
        </OverrideableParameters>
        <MonitorImplementation>
          <MemberModules>
            <DataSource ID="TaskAlreadyRunningWarnEvent" TypeID="Custom.TaskScheduler2.Task.RepeatedEvent.DS">
              <ComputerName>$Config/ComputerName$</ComputerName>
              <LogName><![CDATA[Microsoft-Windows-TaskScheduler/Operational]]></LogName>
              <Expression>
                <And>
                  <Expression>
                    <RegExExpression>
                      <ValueExpression>
                        <XPathQuery Type="UnsignedInteger">EventDisplayNumber</XPathQuery>
                      </ValueExpression>
                      <Operator>MatchesRegularExpression</Operator>
                      <Pattern>^(322)$</Pattern>
                    </RegExExpression>
                  </Expression>
                  <Expression>
                    <SimpleExpression>
                      <ValueExpression>
                        <XPathQuery Type="String">EventSourceName</XPathQuery>
                      </ValueExpression>
                      <Operator>Equal</Operator>
                      <ValueExpression>
                        <Value Type="String">Microsoft-Windows-TaskScheduler</Value>
                      </ValueExpression>
                    </SimpleExpression>
                  </Expression>
                  <Expression>
                    <SimpleExpression>
                      <ValueExpression>
                        <XPathQuery Type="String">EventData/DataItem/EventData/Data[@Name='TaskName']</XPathQuery>
                      </ValueExpression>
                      <Operator>Equal</Operator>
                      <ValueExpression>
                        <Value Type="String">$Config/TaskPath$</Value>
                      </ValueExpression>
                    </SimpleExpression>
                  </Expression>
                </And>
              </Expression>
              <Consolidator>
                <ConsolidationProperties>
                  <PropertyXPathQuery>>EventData/DataItem/EventData/Data[@Name='TaskName']</PropertyXPathQuery>
                </ConsolidationProperties>
                <TimeControl>
                  <!-- wait for delayed events -->
                  <Latency>10</Latency>
                  <!-- don't wait for backlogged items -->
                  <DrainWait>0</DrainWait>
                  <WithinTimeSchedule>
                    <!-- don't trigger state change more often than every 5 minutes -->
                    <Interval>300</Interval>
                  </WithinTimeSchedule>
                </TimeControl>
                <!-- output immediately when count is reached, then wait for timeout -->
                <!--     will output only if count has been reached -->
                <CountingCondition>
                  <Count>2</Count>
                  <CountMode>OnNewItemTestOutputRestart_OnTimerRestart</CountMode>
                </CountingCondition>
              </Consolidator>
            </DataSource>
       
            <!-- trigger on events: either agent start or after tasks have ended                                         -->
            <!--     the latter are written by the rule Custom.TaskScheduler2.Task.TaskActionObserved.EventCreation.Rule -->
            <DataSource ID="EventDS" TypeID="Custom.TaskScheduler2.Task.RepeatedEvent.DS">
              <ComputerName>$Config/ComputerName$</ComputerName>
              <LogName>Operations Manager</LogName>
              <Expression>
                <Or>
                  <Expression>
                    <And>
                      <Expression>
                        <RegExExpression>
                          <ValueExpression>
                            <XPathQuery Type="UnsignedInteger">EventDisplayNumber</XPathQuery>
                          </ValueExpression>
                          <Operator>MatchesRegularExpression</Operator>
                          <Pattern>^(1004|1005|1006)$</Pattern>
                        </RegExExpression>
                      </Expression>
                      <Expression>
                        <SimpleExpression>
                          <ValueExpression>
                            <XPathQuery Type="String">PublisherName</XPathQuery>
                          </ValueExpression>
                          <Operator>Equal</Operator>
                          <ValueExpression>
                            <Value Type="String">Health Service Script</Value>
                          </ValueExpression>
                        </SimpleExpression>
                      </Expression>
                      <!-- Script Name -->
                      <Expression>
                        <SimpleExpression>
                          <ValueExpression>
                            <XPathQuery Type="String">Params/Param[2]</XPathQuery>
                          </ValueExpression>
                          <Operator>Equal</Operator>
                          <ValueExpression>
                            <Value Type="String">Custom.TaskScheduler2.Task.WorkflowTriggerEvent.ps1</Value>
                          </ValueExpression>
                        </SimpleExpression>
                      </Expression>
                      <!-- MP Name -->
                      <Expression>
                        <SimpleExpression>
                          <ValueExpression>
                            <XPathQuery Type="String">Params/Param[4]</XPathQuery>
                          </ValueExpression>
                          <Operator>Equal</Operator>
                          <ValueExpression>
                            <Value Type="String">Custom.Windows.TaskScheduler.Windows2008.Monitoring</Value>
                          </ValueExpression>
                        </SimpleExpression>
                      </Expression>
                      <!-- Management Group Name -->
                      <Expression>
                        <SimpleExpression>
                          <ValueExpression>
                            <XPathQuery Type="String">Params/Param[5]</XPathQuery>
                          </ValueExpression>
                          <Operator>Equal</Operator>
                          <ValueExpression>
                            <Value Type="String">$Target/ManagementGroup/Name$</Value>
                          </ValueExpression>
                        </SimpleExpression>
                      </Expression>
                    </And>
                  </Expression>
                  <Expression>
                    <And>
                      <Expression>
                        <SimpleExpression>
                          <ValueExpression>
                            <XPathQuery Type="UnsignedInteger">EventDisplayNumber</XPathQuery>
                          </ValueExpression>
                          <Operator>Equal</Operator>
                          <ValueExpression>
                            <Value Type="UnsignedInteger">2002</Value>
                          </ValueExpression>
                        </SimpleExpression>
                      </Expression>
                      <Expression>
                        <SimpleExpression>
                          <ValueExpression>
                            <XPathQuery Type="String">PublisherName</XPathQuery>
                          </ValueExpression>
                          <Operator>Equal</Operator>
                          <ValueExpression>
                            <Value Type="String">HealthService</Value>
                          </ValueExpression>
                        </SimpleExpression>
                      </Expression>
                      <!-- Management Group Name -->
                      <Expression>
                        <SimpleExpression>
                          <ValueExpression>
                            <XPathQuery Type="String">Params/Param[1]</XPathQuery>
                          </ValueExpression>
                          <Operator>Equal</Operator>
                          <ValueExpression>
                            <Value Type="String">$Target/ManagementGroup/Name$</Value>
                          </ValueExpression>
                        </SimpleExpression>
                      </Expression>
                    </And>
                  </Expression>
                </Or>
              </Expression>
              <Consolidator>
                <ConsolidationProperties />
                <TimeControl>
                  <!-- wait for delayed events -->
                  <Latency>10</Latency>
                  <!-- don't wait for backlogged items -->
                  <DrainWait>0</DrainWait>
                  <WithinTimeSchedule>
                    <!-- don't call script more than once 10 seconds -->
                    <Interval>10</Interval>
                  </WithinTimeSchedule>
                </TimeControl>
                <!-- output only after the latency has passed -->
                <!--     will output any input item (if any) that has happened -->
                <CountingCondition>
                  <CountMode>OnNewItemNOP_OnTimerOutputRestart</CountMode>
                </CountingCondition>
              </Consolidator>
            </DataSource>
            <ProbeAction ID="ScriptProbe" TypeID="Custom.TaskScheduler2.Task.GetTaskProperties.ScriptProbe">
              <!-- return any task; in case they've been discovered they'll be monitored as well -->
              <DiscoverWindowsTasks>$Config/WindowsTasks$</DiscoverWindowsTasks>
              <!-- look back maximum 15 minutes -->
              <LastRunDurationLookback>900</LastRunDurationLookback>
              <Debug>$Config/Debug$</Debug>
              <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
            </ProbeAction>

            <!-- Task is: Ready AND has run in the past AND LaunchRequestSkipped is false -->
            <!--       OR                                                                 -->
            <!--     Unknown/Disabled                                                     -->
            <!--     has never run                                                        -->
            <!--     has no active triggers                                               -->
            <ConditionDetection ID="NoLaunchIgnored" TypeID="System!System.ExpressionFilter">
              <Expression>
                <And>
                  <Expression>
                    <SimpleExpression>
                      <ValueExpression>
                        <XPathQuery Type="String">Property[@Name='Path']</XPathQuery>
                      </ValueExpression>
                      <Operator>Equal</Operator>
                      <ValueExpression>
                        <Value Type="String">$Config/TaskPath$</Value>
                      </ValueExpression>
                    </SimpleExpression>
                  </Expression>
                  <Expression>
                    <Or>
                      <Expression>
                        <And>
                          <Expression>
                            <SimpleExpression>
                              <ValueExpression>
                                <XPathQuery Type="Integer">Property[@Name='State']</XPathQuery>
                              </ValueExpression>
                              <Operator>Equal</Operator>
                              <ValueExpression>
                                <Value Type="Integer">3</Value>
                              </ValueExpression>
                            </SimpleExpression>
                          </Expression>
                          <Expression>
                            <SimpleExpression>
                              <ValueExpression>
                                <XPathQuery Type="String">Property[@Name='LastRunTime']</XPathQuery>
                              </ValueExpression>
                              <Operator>Equal</Operator>
                              <ValueExpression>
                                <Value Type="String">HasDate</Value>
                              </ValueExpression>
                            </SimpleExpression>
                          </Expression>
                          <Expression>
                            <RegExExpression>
                              <ValueExpression>
                                <XPathQuery Type="String">Property[@Name='LaunchRequestSkipped']</XPathQuery>
                              </ValueExpression>
                              <Operator>MatchesRegularExpression</Operator>
                              <Pattern>False</Pattern>
                            </RegExExpression>
                          </Expression>
                        </And>
                      </Expression>
                      <Expression>
                        <RegExExpression>
                          <ValueExpression>
                            <XPathQuery Type="Integer">Property[@Name='State']</XPathQuery>
                          </ValueExpression>
                          <Operator>MatchesRegularExpression</Operator>
                          <Pattern>^(0|1)$</Pattern>
                        </RegExExpression>
                      </Expression>
                      <Expression>
                        <SimpleExpression>
                          <ValueExpression>
                            <XPathQuery Type="String">Property[@Name='LastRunTime']</XPathQuery>
                          </ValueExpression>
                          <Operator>NotEqual</Operator>
                          <ValueExpression>
                            <Value Type="String">HasDate</Value>
                          </ValueExpression>
                        </SimpleExpression>
                      </Expression>
                      <Expression>
                        <RegExExpression>
                          <ValueExpression>
                            <XPathQuery Type="String">Property[@Name='TriggerText']</XPathQuery>
                          </ValueExpression>
                          <Operator>DoesNotContainSubstring</Operator>
                          <Pattern>True: </Pattern>
                        </RegExExpression>
                      </Expression>
                    </Or>
                  </Expression>
                </And>
              </Expression>
            </ConditionDetection>


          </MemberModules>
          <RegularDetections>
             <RegularDetection MonitorTypeStateID="NoExecutionSkipped">
              <Node ID="NoLaunchIgnored">
                <Node ID="EventDS" />
              </Node>
            </RegularDetection>
            <RegularDetection MonitorTypeStateID="ExecutionSkipped">
                <Node ID="TaskAlreadyRunningWarnEvent" />
            </RegularDetection>
          </RegularDetections>
        </MonitorImplementation>
      </UnitMonitorType>

    </MonitorTypes>
  </TypeDefinitions>
  
</ManagementPackFragment>
